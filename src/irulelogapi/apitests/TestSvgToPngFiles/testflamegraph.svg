<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="182" onload="init(evt)" viewBox="0 0 1200 182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="182.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Chart</text>
<text id="details" x="10.00" y="165" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="165" > </text>
<g id="frames">
<g >
<title>EVENT.3-HTTP_REQUEST (75 samples, 5.78%)</title><rect x="575.9" y="117" width="68.2" height="15.0" fill="rgb(219,227,1)" rx="2" ry="2" />
<text  x="578.89" y="127.5" >EVENT.3..</text>
</g>
<g >
<title>EVENT.1-HTTP_REQUEST (103 samples, 7.94%)</title><rect x="10.0" y="117" width="93.7" height="15.0" fill="rgb(253,132,28)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >EVENT.1-HTT..</text>
</g>
<g >
<title>BYTECODE.2-push1 (13 samples, 1.00%)</title><rect x="776.0" y="69" width="11.9" height="15.0" fill="rgb(239,2,14)" rx="2" ry="2" />
<text  x="779.04" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.15-push1 (13 samples, 1.00%)</title><rect x="1056.3" y="69" width="11.8" height="15.0" fill="rgb(252,168,3)" rx="2" ry="2" />
<text  x="1059.26" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.16-incrScalarStkImm (26 samples, 2.00%)</title><rect x="1068.1" y="69" width="23.6" height="15.0" fill="rgb(254,181,13)" rx="2" ry="2" />
<text  x="1071.09" y="79.5" >B..</text>
</g>
<g >
<title>EVENT.2-HTTP_REQUEST (519 samples, 40.02%)</title><rect x="103.7" y="117" width="472.2" height="15.0" fill="rgb(254,35,4)" rx="2" ry="2" />
<text  x="106.71" y="127.5" >EVENT.2-HTTP_REQUEST</text>
</g>
<g >
<title>CMDVM.1-HTTP::uri (41 samples, 3.16%)</title><rect x="389.4" y="53" width="37.3" height="15.0" fill="rgb(249,95,10)" rx="2" ry="2" />
<text  x="392.38" y="63.5" >CMD..</text>
</g>
<g >
<title>BYTECODE.12-push1 (9 samples, 0.69%)</title><rect x="501.3" y="69" width="8.2" height="15.0" fill="rgb(242,162,3)" rx="2" ry="2" />
<text  x="504.29" y="79.5" ></text>
</g>
<g >
<title>CMDVM.1-log (81 samples, 6.25%)</title><rect x="288.4" y="53" width="73.7" height="15.0" fill="rgb(254,132,21)" rx="2" ry="2" />
<text  x="291.40" y="63.5" >CMDVM.1-..</text>
</g>
<g >
<title>BYTECODE.6-push1 (30 samples, 2.31%)</title><rect x="869.8" y="69" width="27.2" height="15.0" fill="rgb(220,24,46)" rx="2" ry="2" />
<text  x="872.75" y="79.5" >B..</text>
</g>
<g >
<title>BYTECODE.14-invokeStk1 (49 samples, 3.78%)</title><rect x="517.7" y="69" width="44.5" height="15.0" fill="rgb(209,142,12)" rx="2" ry="2" />
<text  x="520.66" y="79.5" >BYTE..</text>
</g>
<g >
<title>CMD.1-log (13 samples, 1.00%)</title><rect x="825.2" y="37" width="11.8" height="15.0" fill="rgb(249,220,29)" rx="2" ry="2" />
<text  x="828.17" y="47.5" ></text>
</g>
<g >
<title>CMD.1-HTTP::uri (9 samples, 0.69%)</title><rect x="418.5" y="37" width="8.2" height="15.0" fill="rgb(214,110,39)" rx="2" ry="2" />
<text  x="421.50" y="47.5" ></text>
</g>
<g >
<title>CMDVM.1-log (40 samples, 3.08%)</title><rect x="525.9" y="53" width="36.3" height="15.0" fill="rgb(243,29,33)" rx="2" ry="2" />
<text  x="528.85" y="63.5" >CMD..</text>
</g>
<g >
<title>BYTECODE.9-jumpFalse1 (18 samples, 1.39%)</title><rect x="450.3" y="69" width="16.4" height="15.0" fill="rgb(226,27,41)" rx="2" ry="2" />
<text  x="453.34" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.12-jumpFalse1 (20 samples, 1.54%)</title><rect x="1014.4" y="69" width="18.2" height="15.0" fill="rgb(245,194,18)" rx="2" ry="2" />
<text  x="1017.41" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.9-invokeStk1 (61 samples, 4.70%)</title><rect x="934.3" y="69" width="55.5" height="15.0" fill="rgb(226,61,4)" rx="2" ry="2" />
<text  x="937.35" y="79.5" >BYTEC..</text>
</g>
<g >
<title>CMD.1-log (21 samples, 1.62%)</title><rect x="1160.0" y="37" width="19.1" height="15.0" fill="rgb(237,114,40)" rx="2" ry="2" />
<text  x="1162.98" y="47.5" ></text>
</g>
<g >
<title>BYTECODE.10-push1 (13 samples, 1.00%)</title><rect x="989.8" y="69" width="11.9" height="15.0" fill="rgb(212,217,6)" rx="2" ry="2" />
<text  x="992.85" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.10-push1 (25 samples, 1.93%)</title><rect x="466.7" y="69" width="22.8" height="15.0" fill="rgb(224,225,11)" rx="2" ry="2" />
<text  x="469.72" y="79.5" >B..</text>
</g>
<g >
<title>BYTECODE.1-push1 (16 samples, 1.23%)</title><rect x="250.2" y="69" width="14.5" height="15.0" fill="rgb(240,84,54)" rx="2" ry="2" />
<text  x="253.19" y="79.5" ></text>
</g>
<g >
<title>RULE.1-/Common/rule1 (572 samples, 44.10%)</title><rect x="669.6" y="101" width="520.4" height="15.0" fill="rgb(231,91,50)" rx="2" ry="2" />
<text  x="672.60" y="111.5" >RULE.1-/Common/rule1</text>
</g>
<g >
<title>BYTECODE.8-ends_with (16 samples, 1.23%)</title><rect x="435.8" y="69" width="14.5" height="15.0" fill="rgb(205,16,32)" rx="2" ry="2" />
<text  x="438.78" y="79.5" ></text>
</g>
<g >
<title>CMDVM.1-log (49 samples, 3.78%)</title><rect x="1134.5" y="53" width="44.6" height="15.0" fill="rgb(235,89,0)" rx="2" ry="2" />
<text  x="1137.50" y="63.5" >CMDV..</text>
</g>
<g >
<title>CMD.1-HTTP::uri (13 samples, 1.00%)</title><rect x="978.0" y="37" width="11.8" height="15.0" fill="rgb(224,177,34)" rx="2" ry="2" />
<text  x="981.02" y="47.5" ></text>
</g>
<g >
<title>BYTECODE.17-push1 (12 samples, 0.93%)</title><rect x="1091.7" y="69" width="11.0" height="15.0" fill="rgb(207,140,17)" rx="2" ry="2" />
<text  x="1094.74" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.20-done (12 samples, 0.93%)</title><rect x="1179.1" y="69" width="10.9" height="15.0" fill="rgb(253,98,27)" rx="2" ry="2" />
<text  x="1182.08" y="79.5" ></text>
</g>
<g >
<title>CMD.1-log (9 samples, 0.69%)</title><rect x="554.1" y="37" width="8.1" height="15.0" fill="rgb(232,24,11)" rx="2" ry="2" />
<text  x="557.06" y="47.5" ></text>
</g>
<g >
<title>EVENT.4-HTTP_REQUEST (600 samples, 46.26%)</title><rect x="644.1" y="117" width="545.9" height="15.0" fill="rgb(233,15,25)" rx="2" ry="2" />
<text  x="647.12" y="127.5" >EVENT.4-HTTP_REQUEST</text>
</g>
<g >
<title>RULEVM.1-/Common/rule1 (543 samples, 41.87%)</title><rect x="696.0" y="85" width="494.0" height="15.0" fill="rgb(220,61,47)" rx="2" ry="2" />
<text  x="698.98" y="95.5" >RULEVM.1-/Common/rule1</text>
</g>
<g >
<title>BYTECODE.5-push1 (22 samples, 1.70%)</title><rect x="849.7" y="69" width="20.1" height="15.0" fill="rgb(209,49,19)" rx="2" ry="2" />
<text  x="852.74" y="79.5" ></text>
</g>
<g >
<title>CMD.1-log (29 samples, 2.24%)</title><rect x="335.7" y="37" width="26.4" height="15.0" fill="rgb(243,127,49)" rx="2" ry="2" />
<text  x="338.71" y="47.5" >C..</text>
</g>
<g >
<title>BYTECODE.7-storeScalarStk (28 samples, 2.16%)</title><rect x="897.0" y="69" width="25.5" height="15.0" fill="rgb(236,62,40)" rx="2" ry="2" />
<text  x="900.05" y="79.5" >B..</text>
</g>
<g >
<title>CMDVM.1-log (40 samples, 3.08%)</title><rect x="800.6" y="53" width="36.4" height="15.0" fill="rgb(243,113,0)" rx="2" ry="2" />
<text  x="803.61" y="63.5" >CMD..</text>
</g>
<g >
<title>CMDVM.1-HTTP::uri (49 samples, 3.78%)</title><rect x="945.3" y="53" width="44.5" height="15.0" fill="rgb(249,220,24)" rx="2" ry="2" />
<text  x="948.27" y="63.5" >CMDV..</text>
</g>
<g >
<title>BYTECODE.1-push1 (15 samples, 1.16%)</title><rect x="762.4" y="69" width="13.6" height="15.0" fill="rgb(234,104,21)" rx="2" ry="2" />
<text  x="765.40" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.5-push1 (10 samples, 0.77%)</title><rect x="372.1" y="69" width="9.1" height="15.0" fill="rgb(247,207,13)" rx="2" ry="2" />
<text  x="375.10" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.2-push1 (16 samples, 1.23%)</title><rect x="264.7" y="69" width="14.6" height="15.0" fill="rgb(254,190,9)" rx="2" ry="2" />
<text  x="267.74" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.3-invokeStk1 (91 samples, 7.02%)</title><rect x="279.3" y="69" width="82.8" height="15.0" fill="rgb(208,203,50)" rx="2" ry="2" />
<text  x="282.30" y="79.5" >BYTECODE...</text>
</g>
<g >
<title>BYTECODE.18-push1 (13 samples, 1.00%)</title><rect x="1102.7" y="69" width="11.8" height="15.0" fill="rgb(226,14,42)" rx="2" ry="2" />
<text  x="1105.66" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.11-pop (13 samples, 1.00%)</title><rect x="489.5" y="69" width="11.8" height="15.0" fill="rgb(226,125,48)" rx="2" ry="2" />
<text  x="492.46" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.8-push1 (13 samples, 1.00%)</title><rect x="922.5" y="69" width="11.8" height="15.0" fill="rgb(248,84,14)" rx="2" ry="2" />
<text  x="925.52" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.14-pop (13 samples, 1.00%)</title><rect x="1044.4" y="69" width="11.9" height="15.0" fill="rgb(238,57,19)" rx="2" ry="2" />
<text  x="1047.43" y="79.5" ></text>
</g>
<g >
<title>RULE.1-/Common/rule1 (486 samples, 37.47%)</title><rect x="133.7" y="101" width="442.2" height="15.0" fill="rgb(213,17,2)" rx="2" ry="2" />
<text  x="136.73" y="111.5" >RULE.1-/Common/rule1</text>
</g>
<g >
<title>BYTECODE.7-push1 (10 samples, 0.77%)</title><rect x="426.7" y="69" width="9.1" height="15.0" fill="rgb(253,8,22)" rx="2" ry="2" />
<text  x="429.68" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.4-pop (11 samples, 0.85%)</title><rect x="362.1" y="69" width="10.0" height="15.0" fill="rgb(237,1,27)" rx="2" ry="2" />
<text  x="365.09" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.13-push1 (9 samples, 0.69%)</title><rect x="509.5" y="69" width="8.2" height="15.0" fill="rgb(220,47,37)" rx="2" ry="2" />
<text  x="512.48" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.19-invokeStk1 (71 samples, 5.47%)</title><rect x="1114.5" y="69" width="64.6" height="15.0" fill="rgb(217,223,6)" rx="2" ry="2" />
<text  x="1117.49" y="79.5" >BYTECOD..</text>
</g>
<g >
<title>BYTECODE.15-done (15 samples, 1.16%)</title><rect x="562.2" y="69" width="13.7" height="15.0" fill="rgb(229,144,52)" rx="2" ry="2" />
<text  x="565.24" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.4-pop (14 samples, 1.08%)</title><rect x="837.0" y="69" width="12.7" height="15.0" fill="rgb(233,198,12)" rx="2" ry="2" />
<text  x="840.00" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.13-push1 (13 samples, 1.00%)</title><rect x="1032.6" y="69" width="11.8" height="15.0" fill="rgb(215,164,46)" rx="2" ry="2" />
<text  x="1035.61" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.11-ends_with (14 samples, 1.08%)</title><rect x="1001.7" y="69" width="12.7" height="15.0" fill="rgb(218,210,26)" rx="2" ry="2" />
<text  x="1004.67" y="79.5" ></text>
</g>
<g >
<title>BYTECODE.6-invokeStk1 (50 samples, 3.86%)</title><rect x="381.2" y="69" width="45.5" height="15.0" fill="rgb(217,149,48)" rx="2" ry="2" />
<text  x="384.20" y="79.5" >BYTE..</text>
</g>
<g >
<title>all (1,297 samples, 100%)</title><rect x="10.0" y="133" width="1180.0" height="15.0" fill="rgb(232,199,19)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>BYTECODE.3-invokeStk1 (54 samples, 4.16%)</title><rect x="787.9" y="69" width="49.1" height="15.0" fill="rgb(223,195,4)" rx="2" ry="2" />
<text  x="790.87" y="79.5" >BYTE..</text>
</g>
<g >
<title>RULEVM.1-/Common/rule1 (424 samples, 32.69%)</title><rect x="190.1" y="85" width="385.8" height="15.0" fill="rgb(214,13,1)" rx="2" ry="2" />
<text  x="193.14" y="95.5" >RULEVM.1-/Common/rule1</text>
</g>
</g>
</svg>
